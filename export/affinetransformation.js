var gdjs;(function(c){class y{constructor(){this.matrix=new Float32Array([1,0,0,1,0,0])}setToIdentity(){const a=this.matrix;a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0}isIdentity(){const a=this.matrix;return a[0]===1&&a[1]===0&&a[2]===0&&a[3]===1&&a[4]===0&&a[5]===0}equals(a){const t=this.matrix,o=a.matrix;return this===a||t[0]===o[0]&&t[1]===o[1]&&t[2]===o[2]&&t[3]===o[3]&&t[4]===o[4]&&t[5]===o[5]}nearlyEquals(a,t){const o=this.matrix,s=a.matrix;return this===a||c.nearlyEqual(o[0],s[0],t)&&c.nearlyEqual(o[1],s[1],t)&&c.nearlyEqual(o[2],s[2],t)&&c.nearlyEqual(o[3],s[3],t)&&c.nearlyEqual(o[4],s[4],t)&&c.nearlyEqual(o[5],s[5],t)}copyFrom(a){const t=this.matrix,o=a.matrix;return t[0]=o[0],t[1]=o[1],t[2]=o[2],t[3]=o[3],t[4]=o[4],t[5]=o[5],this}setToTranslation(a,t){const o=this.matrix;o[0]=1,o[1]=0,o[2]=0,o[3]=1,o[4]=a,o[5]=t}translate(a,t){var o=this.matrix;o[4]=o[0]*a+o[2]*t+o[4],o[5]=o[1]*a+o[3]*t+o[5]}setToScale(a,t){const o=this.matrix;o[0]=a,o[1]=0,o[2]=0,o[3]=t,o[4]=0,o[5]=0}scale(a,t){const o=this.matrix;o[0]*=a,o[1]*=a,o[2]*=t,o[3]*=t}setToRotation(a){const t=this.matrix;let o=Math.cos(a),s=Math.sin(a);(o===-1||o===1)&&(s=0),(s===-1||s===1)&&(o=0),t[0]=o,t[1]=s,t[2]=-s,t[3]=o,t[4]=0,t[5]=0}rotate(a){const t=this.matrix;let o=Math.cos(a),s=Math.sin(a);(o===-1||o===1)&&(s=0),(s===-1||s===1)&&(o=0);const i=t[0],n=t[1],r=t[2],m=t[3];t[0]=i*o+r*s,t[1]=n*o+m*s,t[2]=i*-s+r*o,t[3]=n*-s+m*o}setToRotationAround(a,t,o){const s=this.matrix;let i=Math.cos(a),n=Math.sin(a);(i===-1||i===1)&&(n=0),(n===-1||n===1)&&(i=0),s[0]=i,s[1]=n,s[2]=-n,s[3]=i,s[4]=t-t*i+o*n,s[5]=o-t*n+o*i}rotateAround(a,t,o){this.translate(t,o),this.rotate(a),this.translate(-t,-o)}setToFlipX(a){const t=this.matrix;t[0]=-1,t[1]=0,t[2]=0,t[3]=1,t[4]=2*a,t[5]=0}flipX(a){this.translate(a,0),this.scale(-1,1),this.translate(-a,0)}setToFlipY(a){const t=this.matrix;t[0]=-1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=2*a}flipY(a){this.translate(0,a),this.scale(1,-1),this.translate(0,-a)}flipDiagonally(){const a=this.matrix,t=a[0],o=a[1],s=a[2],i=a[3],n=a[4],r=a[5];a[0]=o,a[1]=t,a[2]=i,a[3]=s,a[4]=r,a[5]=n}concatenate(a){const t=this.matrix,o=a.matrix,s=t[0],i=t[1],n=t[2],r=t[3],m=t[4],h=t[5],l=o[0],e=o[1],x=o[2],f=o[3],u=o[4],T=o[5];t[0]=l*s+e*n,t[1]=l*i+e*r,t[2]=x*s+f*n,t[3]=x*i+f*r,t[4]=u*s+T*n+m,t[5]=u*i+T*r+h}preConcatenate(a){const t=this.matrix,o=a.matrix,s=t[0],i=t[1],n=t[2],r=t[3],m=t[4],h=t[5],l=o[0],e=o[1],x=o[2],f=o[3],u=o[4],T=o[5];t[0]=s*l+i*x,t[1]=s*e+i*f,t[2]=n*l+r*x,t[3]=n*e+r*f,t[4]=m*l+h*x+u,t[5]=m*e+h*f+T}transform(a,t){const o=this.matrix,s=o[0]*a[0]+o[2]*a[1]+o[4],i=o[1]*a[0]+o[3]*a[1]+o[5];t[0]=s,t[1]=i}invert(){const a=this.matrix,t=a[0],o=a[1],s=a[2],i=a[3],n=a[4],r=a[5],m=t*i-o*s;return a[0]=i/m,a[1]=-o/m,a[2]=-s/m,a[3]=t/m,a[4]=(s*r-i*n)/m,a[5]=-(t*r-o*n)/m,this}toString(){const a=this.matrix;return`[[${a[0]} ${a[1]}] [${a[2]} ${a[3]}] [${a[4]} ${a[5]}]]`}}c.AffineTransformation=y})(gdjs||(gdjs={}));
//# sourceMappingURL=affinetransformation.js.map
